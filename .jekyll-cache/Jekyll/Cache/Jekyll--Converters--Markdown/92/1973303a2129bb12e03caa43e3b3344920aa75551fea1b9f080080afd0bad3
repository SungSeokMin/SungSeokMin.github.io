I"<h1 id="today-what-i-learned">Today What I Learned</h1>

<hr />

<h2 id="프로그래머스-같은-숫자는-싫어">프로그래머스 “같은 숫자는 싫어”</h2>

<h3 id="문제설명">문제설명</h3>

<blockquote>
  <p>주어진 배열 arr은 숫자로 이루어져있다.
이때, 배열 arr에서 연속적으로 나타는 숫자는 하나만 남기고 전부 제거하려고한다.
제거된 후 남은 수들을 반환하는데, 반환할 때는 원소들의 순서를 유지해야한다.</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
- arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
예제
arr	               answer
[1,1,3,3,0,1,1]	  [1,3,0,1]
[4,4,4,3,3]	      [4,3]
</code></pre></div></div>

<hr />

<p>“반환할 때는 원소들의 순서를 유지해야한다” 라고 되어있는데 대충 본다면 sort 정렬이라고 착각할 수 있을 것 같다.</p>

<h2 id="의사코드">의사코드</h2>

<ol>
  <li>arr의 첫번째 요소를 변수로 선언한다. –&gt; <code>let first = arr[0]</code></li>
  <li>반환할 배열에 선언한 변수를 넣어준다. 즉, arr의 첫번째 요소를 넣는다.</li>
  <li>반복문을 사용하여 arr을 탐색하는데 arr의 1번째 인덱스부터 탐색을 한다. (0번째 인덱스는 리턴배열에 들어가 있기 때문)</li>
  <li>조건문을 통해, arr의 첫번째 요소와 같지않은 인덱스의 요소들만 리턴배열에 재할당하여 푸시한다. –&gt; <code>first = arr[i]</code></li>
</ol>

<h2 id="작성한-코드">작성한 코드</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function solution(arr) {
    let answer = [];
    let first = arr[0];
    answer.push(first);

    for(let i= 1; i&lt; arr.length; i++) {
        if(first !== arr[i]) {
            first = arr[i];
            answer.push(first)
        }
    }
    return answer;
}
</code></pre></div></div>

<hr />

<p>작성한 코드로 통과하였지만, 다른사람이 푼 풀이가 정말 간단한 것을 찾았다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function solution(arr) {
    return arr.filter((x, index) =&gt; x !== arr[index + 1])
}
</code></pre></div></div>

<p>filter 메서드를 사용하였고, 인덱스를 추가하며 같지 않다면 리턴해주는 방식으로 구현되어있는데 정말 간단하고 대단한 것 같다.</p>

<hr />

<p>알고리즘 또한 부족한 부분이기 때문에, 항상 하루에 1~2개 씩은 꼭 풀고 있는 것 같다.
앞으로도 매일 알고리즘 공부를 틈틈히 하며 블로깅하도록 하겠다.</p>
:ET